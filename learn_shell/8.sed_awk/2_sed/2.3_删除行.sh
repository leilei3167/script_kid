#!/bin/bash

# 删除命令d名副其实，它会删除匹配指定寻址模式的所有行。使用该命令时要特别小心，如
#! 如果你忘记加入寻址模式的话，流中的所有文本行都会被删除
# 记住，sed编辑器不会修改原始文件。你删除的行只是从sed编辑器的输出中消失了。原始
# 文件仍然包含那些“删掉的”行

# sed '/number 1/d' data6.txt  # 删除包含number 1的行

#  sed '2,3d' data6.txt # 删除第二行和第三行

# 也可以使用两个文本模式来删除某个区间内的行，但这么做时要小心。你指定的第一个模式
# 会“打开”行删除功能，第二个模式会“关闭”行删除功能。sed编辑器会删除两个指定行之间
# 的所有行（包括指定的行）。

echo "源文件:"
cat data7.txt
echo
echo
echo "sed '/1/,/3/d' data7.txt之后:"
sed '/1/,/3/d' data7.txt # 匹配到1时会打开删除模式,删除直到匹配到3的行,包括3
# 第二个出现数字“1”的行再次触发了删除命令，因为没有找到停止模式，所以就将数据流
# 中的剩余行全部删除了
